# 🔹 nginx-hcp라는 별도의 네임스페이스를 생성
apiVersion: v1
kind: Namespace
metadata:
  name: nginx-hcp
---
# 🔹 Nginx 설정 ConfigMap (default.conf, nginx.conf)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: nginx-hcp
data:
  default.conf: |
    server {
        listen       8080;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        error_page  500 502 503 504 /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
  nginx.conf: |
    worker_processes  auto;
    pid /tmp/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        sendfile        on;
        keepalive_timeout  65;

        include /etc/nginx/conf.d/*.conf;
    }
---
# 🔹 Nginx를 실행할 Deployment 정의
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nginx-hcp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx  # Pod 선택에 사용할 라벨
  template:
    metadata:
      labels:
        app: nginx  # 위 selector와 일치해야 함
    spec:
      initContainers:
        - name: init-html
          image: busybox
          command:
            - sh
            - -c
            - |
              echo '<!DOCTYPE html>
              <html>
              <head><title>Nginx on OpenShift</title></head>
              <body>
              <h1>Hello from Latest Nginx on OpenShift - $(POD_NAME)</h1>
              </body>
              </html>' > /html/index.html
          volumeMounts:
            - name: nginx-html
              mountPath: /html
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx-main-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-html
              mountPath: /usr/share/nginx/html
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
        - name: nginx-main-conf
          configMap:
            name: nginx-conf
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-html
          emptyDir: {}
---
# 🔹 Cluster 내부에서 nginx Pod로 트래픽을 라우팅할 Service 생성
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx-hcp
spec:
  selector:
    app: nginx  # nginx Deployment에서 사용하는 라벨과 일치해야 함
  ports:
    - name: http
      port: 80         # 클러스터 외부에서 접근할 포트
      targetPort: 8080   # nginx 컨테이너에서 노출한 포트
      protocol: TCP
  type: ClusterIP      # 기본 서비스 타입 (클러스터 내부에서만 접근 가능)
---
# 🔹 외부에서 접근 가능한 OpenShift Route 생성
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nginx-route-default
  namespace: nginx-hcp
spec:
  to:
    kind: Service
    name: nginx-service  # 위에서 정의한 Service와 연결
  port:
    targetPort: http     # Service의 포트 이름과 일치해야 함
# 🔹 커스텀 도메인용 route 설정
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nginx-route-custom
  namespace: nginx-hcp
spec:
  host: oc.naddong.shop
  to:
    kind: Service
    name: nginx-service
  port:
    targetPort: http


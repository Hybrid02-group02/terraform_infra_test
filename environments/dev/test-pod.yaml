apiVersion: v1
kind: Namespace
metadata:
  name: nginx-hcp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-html
  namespace: nginx-hcp
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>ROSA HCP Nginx Test</title>
    </head>
    <body>
      <h1>Hello from Terraform EC2 instance</h1>
    </body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: nginx-hcp
data:
  nginx.conf: |
    # 전역 nginx 설정 파일 오버라이드
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;

    # 🔧 기본 pid 파일 위치가 Permission denied라 안전한 /tmp로 변경
    pid        /tmp/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        sendfile        on;
        keepalive_timeout  65;

        server {
            listen 8080 default_server;
            server_name _;

            location / {
                root   /usr/share/nginx/html;
                index  index.html;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nginx-hcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            # 🔹 HTML 컨텐츠 Mount
            - name: html
              mountPath: /usr/share/nginx/html
            # 🔹 빈 디렉토리 (캐시용)
            - name: cache
              mountPath: /var/cache/nginx
            # 🔹 nginx.conf 전체 오버라이드
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: html
          configMap:
            name: nginx-html
        - name: cache
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: nginx-hcp
spec:
  selector:
    app: nginx
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nginx-route
  namespace: nginx-hcp
spec:
  to:
    kind: Service
    name: nginx-service
  port:
    targetPort: 80

